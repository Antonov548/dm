% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter-dm.R
\name{cdm_filter}
\alias{cdm_filter}
\alias{cdm_apply_filters}
\title{Filtering a \code{\link{dm}} object}
\usage{
cdm_filter(dm, table, ...)

cdm_apply_filters(dm)
}
\arguments{
\item{dm}{A \code{dm} object.}

\item{table}{A table in the \code{dm}}

\item{...}{Logical predicates defined in terms of the variables in \code{.data}, passed on to \code{\link[dplyr:filter]{dplyr::filter()}}.
Multiple conditions are combined with \code{&} or \code{,}. Only rows where the condition evaluates
to TRUE are kept.

The arguments in ... are automatically quoted and evaluated in the context of
the data frame. They support unquoting and splicing. See \code{vignette("programming", package = "dplyr")}
for an introduction to these concepts.}
}
\description{
Filtering one table of a \code{\link{dm}} object has an effect on all tables connected to this table
via one or more steps of foreign key relations. Firstly, one or more filter conditions for
one or more tables can be defined using \code{cdm_filter()}, with a syntax similar to \code{dplyr::filter()}.
These conditions will be stored in the \code{\link{dm}} and not immediately executed. With \code{cdm_apply_filters()}
all tables will be updated according to the filter conditions and the foreign key relations.
}
\details{
\code{cdm_filter()} allows you to set one or more filter conditions for one table
of a \code{\link{dm}} object. These conditions will be stored in the \code{\link{dm}} for when they are needed.
Once executed, the filtering the will affect all tables connected to the filtered one by
foreign key constraints, leaving only the rows with the corresponding key values. The filtering
implicitly takes place, once a table is requested from the \code{\link{dm}} by using one of \code{tbl()}, \code{[[.dm()}, \code{$.dm()}.

With \code{cdm_apply_filters()} all set filter conditions are applied and their
combined cascading effect on each table of the \code{\link{dm}} is taken into account, producing a new
\code{dm} object.
This function is called by the \code{compute()} method for \code{dm} class objects.
}
\examples{
library(dplyr)

dm_nyc_filtered <-
  cdm_nycflights13() \%>\%
  cdm_filter(airports, name == "John F Kennedy Intl")

tbl(dm_nyc_filtered, "flights")
dm_nyc_filtered[["planes"]]
dm_nyc_filtered$airlines

cdm_nycflights13() \%>\%
  cdm_filter(airports, name == "John F Kennedy Intl") \%>\%
  cdm_apply_filters()
cdm_nycflights13() \%>\%
  cdm_filter(flights, month == 3) \%>\%
  cdm_apply_filters()

library(dplyr)
cdm_nycflights13() \%>\%
  cdm_filter(planes, engine \%in\% c("Reciprocating", "4 Cycle")) \%>\%
  compute()
}
