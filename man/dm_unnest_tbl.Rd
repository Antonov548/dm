% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dm_unnest_tbl.R
\name{dm_unnest_tbl}
\alias{dm_unnest_tbl}
\alias{dm_unpack_tbl}
\title{Unnest or unpack columns from a wrapped table}
\usage{
dm_unnest_tbl(
  dm,
  table,
  col,
  parent_fk = NULL,
  child_pk_names = NULL,
  child_fk_names = NULL,
  ptype = NULL
)

dm_unpack_tbl(
  dm,
  table,
  col,
  child_fk = NULL,
  parent_pk_names = NULL,
  parent_fk_names = NULL,
  ptype = NULL
)
}
\arguments{
\item{dm}{A dm.}

\item{table}{A table.}

\item{col}{The column to unpack or unnest (unquoted).}

\item{parent_fk}{Columns in the table to unnest that the unnested child's foreign keys point to}

\item{child_pk_names}{Names of the unnested child's primary keys}

\item{child_fk_names}{Names of the unnested child's foreign keys}

\item{ptype}{A dm, only used to query names of primary and foreign keys.}

\item{child_fk}{Foreign key columns of the table to unpack}

\item{parent_pk_names}{Names of the unpacked parent's primary keys}

\item{parent_fk_names}{Names of the unpacked parent's foreign keys}
}
\value{
A dm.
}
\description{
\code{dm_unnest_tbl()} target a specific column to unnest
from the given table in a given dm.
A ptype or a set of keys should be given, not both.

\code{dm_unpack_tbl()} targets a specific column to unpack
from the given table in a given dm.
A ptype or a set of keys should be given,
not both.
}
\details{
\code{\link[=dm_nest_tbl]{dm_nest_tbl()}} is an inverse operation to \code{dm_unnest_tbl()}
if differences in row and column order are ignored.
The opposite is true if referential constraints between both tables
are satisfied.

\code{\link[=dm_pack_tbl]{dm_pack_tbl()}} is an inverse operation to \code{dm_unpack_tbl()}
if differences in row and column order are ignored.
The opposite is true if referential constraints between both tables
are satisfied
and if all rows in the parent table have at least one child row,
i.e. if the relationship is of cardinality 1:n or 1:1.
}
\examples{
airlines_wrapped <- dm_wrap(dm_nycflights13(), "airlines")

airlines_wrapped \%>\%
  dm_unnest_tbl(airlines, flights, parent_fk = carrier, child_fk_names = "carrier") \%>\%
  dm_unpack_tbl(
    flights, weather,
    child_fk = c(origin, time_hour),
    parent_fk_names = c("origin", "time_hour"),
    parent_pk_names = c("origin", "time_hour")
  ) \%>\%
  dm_unpack_tbl(
    flights, planes,
    child_fk = tailnum, parent_fk_names = "tailnum",
    parent_pk_names = "tailnum"
  ) \%>\%
  dm_unpack_tbl(
    flights, airports,
    child_fk = origin, parent_fk_names = "faa",
    parent_pk_names = "faa"
  )

airlines_wrapped \%>\%
  dm_unnest_tbl(airlines, flights, ptype = dm_ptype(dm_nycflights13())) \%>\%
  dm_unpack_tbl(flights, weather, ptype = dm_ptype(dm_nycflights13())) \%>\%
  dm_unpack_tbl(flights, planes, ptype = dm_ptype(dm_nycflights13())) \%>\%
  dm_unpack_tbl(flights, airports, ptype = dm_ptype(dm_nycflights13()))
}
\seealso{
\code{\link[=dm_unwrap]{dm_unwrap()}}, \code{\link[=dm_nest_tbl]{dm_nest_tbl()}}, \code{\link[=dm_pack_tbl]{dm_pack_tbl()}}, \code{\link[=dm_wrap]{dm_wrap()}},
\code{\link[=dm_examine_constraints]{dm_examine_constraints()}}, \code{\link[=dm_examine_cardinality]{dm_examine_cardinality()}},
\code{\link[=dm_ptype]{dm_ptype()}}.
}
