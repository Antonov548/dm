% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform-tbl.R
\name{persist-tbl}
\alias{persist-tbl}
\alias{tbl_insert}
\title{Persisting data for single tables}
\usage{
tbl_insert(target, source, ..., dry_run = FALSE)
}
\arguments{
\item{target}{Target table object.}

\item{source}{Source table object.}

\item{...}{Must be empty.}

\item{dry_run}{Set to \code{TRUE} for running the operation without persisting.
In this mode, a modified version of \code{target} is returned.
This allows verifying the results of an operation before actually
applying it.}
}
\value{
A tbl object of the same structure as \code{target},
visible only if \code{dry_run = TRUE}, otherwise \link{invisible}.
Identical to \code{target_dm} when run on a database with \code{dry_run = FALSE}.
}
\description{
\lifecycle{experimental}

These methods provide a framework for updating data in existing tables.
Unlike \code{\link[=compute]{compute()}}, \code{\link[=copy_to]{copy_to()}} or \code{\link[=copy_dm_to]{copy_dm_to()}}, no new tables are created
on the database.
All operations expect that both existing and new data are presented
in two compatible \link{tbl} objects on the same data source.

\code{tbl_insert()} adds new records.
}
\examples{
if (rlang::is_installed("RSQLite")) {
  # Truncated table:
  flights_init <- nycflights13::flights[0, ]

  sqlite <- src_sqlite(":memory:", create = TRUE)

  # Target database:
  flights_sqlite <- copy_to(sqlite, flights_init, temporary = FALSE)
  print(nrow(flights_sqlite))

  # First update:
  flights_jan_1 <-
    nycflights13::flights \%>\%
    filter(month == 1, day == 1)
  print(dm_nrow(flights_jan_1))

  # Copy to temporary tables on the target database:
  flights_jan_1_sqlite <- copy_to(sqlite, flights_jan_1)
  tbl_insert(flights_sqlite, flights_jan_1_sqlite)
  print(nrow(flights_sqlite))

  # Second update:
  flights_jan_2 <-
    nycflights13::flights \%>\%
    filter(month == 1, day == 2)

  # Copy to temporary tables on the target database:
  flights_jan_2_sqlite <- copy_to(sqlite, flights_jan_2)

  # Dry run:
  flights_new <- tbl_insert(
    flights_sqlite,
    flights_jan_2_sqlite,
    dry_run = TRUE
  )
  print(nrow(flights_new))
  print(nrow(flights_sqlite))

  # Check for consistency before applying:
  flights_new \%>\%
    dplyr::count(year, month, day)

  # Apply:
  dm_insert(flights_sqlite, flights_jan_2_sqlite)
  print(dm_nrow(flights_sqlite))
}
}
