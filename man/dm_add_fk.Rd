% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/foreign-keys.R
\name{dm_add_fk}
\alias{dm_add_fk}
\title{Add a reference from one table of a \code{\link{dm}} to another}
\usage{
dm_add_fk(dm, table, columns, ref_table, check = FALSE)
}
\arguments{
\item{dm}{A \code{dm} object.}

\item{table}{A table in the \code{dm}.}

\item{columns}{The columns of \code{table} which are to become the foreign key columns that
reference the primary key of \code{ref_table}.}

\item{ref_table}{The table which \code{table} is referencing.
This table needs to have a primary key set.}

\item{check}{Boolean, if \code{TRUE}, a check will be performed to determine if the values of
\code{column} are a subset of the values of the primary key column of \code{ref_table}.}
}
\value{
An updated \code{dm} with an additional foreign key relation.
}
\description{
\code{dm_add_fk()} marks the specified columns as the foreign key of table \code{table} with
respect to the primary key of table \code{ref_table}.
If \code{check == TRUE}, then it will first check if the values in columns \code{columns} are a subset
of the values of the primary key in table \code{ref_table}.
}
\section{Compound keys}{


Currently, keys consisting of more than one column are not supported.
\href{https://github.com/krlmlr/dm/issues/3}{This feature} is planned for dm 0.2.0.
The syntax of this function will be extended but will remain compatible
with current semantics.
}

\examples{
library(dplyr)
iris_key <- mutate(iris, key = row_number()) \%>\%
  select(key, everything())
dm(iris_1 = iris_key, iris_2 = iris_key) \%>\%
  dm_add_pk(iris_2, key) \%>\%
  dm_add_fk(iris_1, key, iris_2)
}
\seealso{
Other foreign key functions: 
\code{\link{dm_enum_fk_candidates}()},
\code{\link{dm_get_all_fks}()},
\code{\link{dm_get_fk}()},
\code{\link{dm_has_fk}()},
\code{\link{dm_rm_fk}()}
}
\concept{foreign key functions}
